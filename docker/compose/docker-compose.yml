services:
  # Go API Backend
  api:
    build:
      context: ../../books_api
      dockerfile: Dockerfile
    container_name: books-api
    ports:
      - '8080:8080'
    environment:
      - GIN_MODE=release
      - DB_PATH=/data/books.db
    volumes:
      - api_data:/data
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8080/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - books-network

  # Frontend (Nginx serving HTML + proxying API)
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: books-frontend
    ports:
      - '3000:80'
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - books-network

volumes:
  api_data:
    driver: local

networks:
  books-network:
    driver: bridge
